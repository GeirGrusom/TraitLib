<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HelloWorldExample</name>
    </assembly>
    <members>
        <member name="T:HelloWorldExample.Program">
            <summary>
            Program entrypoint for Hello World
            </summary>
        </member>
        <member name="M:HelloWorldExample.Program.NextGeneration(System.Collections.Generic.IEnumerable{Genetics.Genes{System.Byte,System.Int32}},Genetics.GeneCombiner{System.Byte,System.Int32})">
            <summary>
            Creates a new generation using the specified combiner
            </summary>
            <param name="generation">Generation to combine</param>
            <param name="combiner">Combiner to use</param>
            <returns>A list of genes for the new generation or null if the most fit gene set is a greeting</returns>
        </member>
        <member name="M:HelloWorldExample.Program.FitnessFunction(Genetics.Genes{System.Byte,System.Int32})">
            <summary>
            Implements a fitness function for a set of genes
            </summary>
            <param name="genes">Genes to calculate fitness of</param>
            <returns>The fitness of the specified gene</returns>
        </member>
        <member name="M:HelloWorldExample.Program.LevenshteinDistance(System.Span{System.Byte},System.Span{System.Byte})">
            <summary>
            Implements the Levenshtein distance function.
            </summary>
            <param name="left">String1</param>
            <param name="right">String2</param>
            <returns>Edit actions required between the two</returns>
            <remarks>This code is taken from Sam Allen's Lehvenstein Distance implementation on <a href="https://www.dotnetperls.com/levenshtein">Dotnet pearls</a></remarks>
        </member>
    </members>
</doc>
